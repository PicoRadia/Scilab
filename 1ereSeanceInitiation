//25-11-2019 Radia El Hamdouni  cours Méthodes : 1ère séance : scilab

//Declaration de quelques constantes
    --> %pi
     %pi  = 
    
       3.1415927
     --> %eps  = 
    
       2.220D-16
    
    -->whos //donne l'historique des variables utilisés
    
    //Quelques commandes de Linux
    --> pwd         //repertoire courant
     ans  =
    
     C:\Users\Surface\Documents
    
    --> cd ..        //changer de rep et monter d'un niveau
     ans  =
    
     C:\Users\Surface
    -->ls  //Lister le contenu du rep courant
    
    //Nombres complexes
    --> z=2+4*(%i) //declaration nbre complex
     z  = 
    
       2. + 4.i
    --> real(z) //partie reelle de z
     ans  =
    
       2.
    //Les vecteurs
    		//Declaration 
    --> a=[1 2 3 4 5] //ou a=[1,2,3,4,5]
     a  = 
    
       1.   2.   3.   4.   5.
    --> a'   //transposée
     ans  =
    
       1.
       2.
       3.
       4.
       5.   
    --> a+2*a  //opérations arithmétiques
     ans  =
    
       3.   6.   9.   12.   15.
    
    
    //il existe des fcts prédefinis comme : dot,cross,triu,chol... A chercher
    
    
    >>linspace(2,4,5) //discretisation,fragmentation du segment [2,4]
     ans  =
    
       2.   2.5   3.   3.5   4.
    
    >>disp(a)   //l affichage
    
       1.   2.   3.   4.   5.   6.   7.
    //Declaration d'un matrice
    >>a= [1 2 3 4; 4 5 7 8;9 10 11 12 ]
     a  = 
    
       1.   2.    3.    4. 
       4.   5.    7.    8. 
       9.   10.   11.   12.
    //Selectionner un element de la matrice
    >>a(2,3)
     ans  =
    
       7.
    //concatener deux matrices horizontalement
    --> [a a]
     ans  =
    
       1.   2.    3.    4.    1.   2.    3.    4. 
       4.   5.    7.    8.    4.   5.    7.    8. 
       9.   10.   11.   12.   9.   10.   11.   12.
    
    //concatener deux matrices verticalement
    --> [a;a] 
     ans  =
    
       1.   2.    3.    4. 
       4.   5.    7.    8. 
       9.   10.   11.   12.
       1.   2.    3.    4. 
       4.   5.    7.    8. 
       9.   10.   11.   12.
    
    > a(1,:) //afficher une seule ligne
     ans  =
    
       1.   2.   3.   4.
    
    --> a(:,3) //afficher la 3 eme colonne
     ans  =
    
       3.
       7.
       11.
    
    --> zeros(2,4) //matrice qui contient des zeros
     ans  =
    
       0.   0.   0.   0.
       0.   0.   0.   0.
    
    --> rand(2,4) //matrice avec des valeurs aléatoires
     ans  =
    
       0.6325745   0.9184708   0.4818509   0.4148104
       0.4051954   0.0437334   0.2639556   0.2806498
    
    --> ones(3,3) //matrice de 1
     ans  =
    
       1.   1.   1.
       1.   1.   1.
       1.   1.   1.
    --> diag([2:5]) //matrice avec valeurs dans les diag de 2 à 5
     ans  =
    
       2.   0.   0.   0.
       0.   3.   0.   0.
       0.   0.   4.   0.
       0.   0.   0.   5.
    
    --> 2:4:20 //a partir de 2 on ajoute à chaque élement 2 et on s'arrête à 20
     ans  =
    
       2.   6.   10.   14.   18.
    
    //remplir la surdiagonale de 2 à 5
    --> diag([2:5],1)
     ans  =
    
       0.   2.   0.   0.   0.
       0.   0.   3.   0.   0.
       0.   0.   0.   4.   0.
       0.   0.   0.   0.   5.
       0.   0.   0.   0.   0.
    //remplir la sousdiagonale de 2 à 5
    --> diag([2:5],-1)
     ans  =
    
       0.   0.   0.   0.   0.
       2.   0.   0.   0.   0.
       0.   3.   0.   0.   0.
       0.   0.   4.   0.   0.
       0.   0.   0.   5.   0.
    
    --> diag(ones(1,4),1)
     ans  =
    
       0.   1.   0.   0.   0.
       0.   0.   1.   0.   0.
       0.   0.   0.   1.   0.
       0.   0.   0.   0.   1.
       0.   0.   0.   0.   0.
    //exemple
    --> A=2*eye(5,5)-diag(ones(1,4),1)+(-1)*diag(ones(1,4),-1)
     A  = 
    
       2.  -1.   0.   0.   0.
      -1.   2.  -1.   0.   0.
       0.  -1.   2.  -1.   0.
       0.   0.  -1.   2.  -1.
       0.   0.   0.  -1.   2.
    
    --> A=matrix(1:9,3,3)
     A  = 
    
       1.   4.   7.
       2.   5.   8.
       3.   6.   9.
    
    
    --> A'
     ans  =
    
       1.   2.   3.
       4.   5.   6.
       7.   8.   9.
    
    //chaque terme est multiplié par lui même
    --> A=[1 2 3 ;4 5 6 ;7 8 9] //declaration d'une matrice test
     A  = 
    
       1.   2.   3.
       4.   5.   6.
       7.   8.   9.
    
    
    --> A.*A  //l'opération sur la matrice test
     ans  =
    
       1.    4.    9. 
       16.   25.   36.
       49.   64.   81.
